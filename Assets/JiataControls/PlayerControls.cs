//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.1
//     from Assets/JiataControls/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""Player  Movement"",
            ""id"": ""465b27f3-c315-497b-a1e0-9a5dd3432e3c"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""7622a958-43ef-4291-92f3-aaa5775ed84a"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Camera"",
                    ""type"": ""PassThrough"",
                    ""id"": ""ba73388d-6dd2-4211-bde1-6a8bc7faed5c"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Lock On Target Left"",
                    ""type"": ""Button"",
                    ""id"": ""89c6639d-6cb6-486d-8368-69964385093f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Lock On Target Right"",
                    ""type"": ""Button"",
                    ""id"": ""c52dc45d-73ba-4299-923c-646ba2303975"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Navigate LeftMenu"",
                    ""type"": ""Button"",
                    ""id"": ""e9feb7f0-6955-4dfc-b5cc-c40557fe3de9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Navigate RightMenu"",
                    ""type"": ""Button"",
                    ""id"": ""5f3c4b9d-3b73-4ccc-b759-ad45bff9e5c5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Inventory MovementRight"",
                    ""type"": ""Button"",
                    ""id"": ""86632a93-6d59-4265-8c27-5ad7cc168f36"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Inventory MovementLeft"",
                    ""type"": ""Button"",
                    ""id"": ""af200d47-daa4-4344-b162-d158100136ef"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Inventory MovementUp"",
                    ""type"": ""Button"",
                    ""id"": ""7c1f42f9-0c9b-449f-8193-906b001a28c5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Inventory MovementDown"",
                    ""type"": ""Button"",
                    ""id"": ""65b49293-57c6-4eba-a988-4b63732ec3ed"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Left Joystick"",
                    ""id"": ""6ba8d38c-2214-4126-b0be-96089207c56b"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""c051d0fc-862f-43d2-b8cc-0ae246b7d11f"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""04011a61-1bec-4dfa-a561-3aa67d6bd78b"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""283f7431-43f9-4bff-9beb-a0d946d5d680"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""cf9a8285-9313-42db-92db-7e285b794dc5"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""05d40b05-63a0-4aee-9eed-95c60ea2cf21"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""0c54d2cc-0db0-47b1-bca3-21a7476be5a2"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""0dd7b664-d9f4-4646-820f-3972f5b3bd65"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""d89cf50c-0e14-4824-ba1d-42028858e166"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right Stick"",
                    ""id"": ""e805a8b0-a11a-4a0c-8461-6fd0a48220f4"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone"",
                    ""groups"": """",
                    ""action"": ""Camera"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""c71db598-4e51-4ef7-8d25-80db59441eb9"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""b092b960-f746-4f3b-af85-0e08209f5b03"",
                    ""path"": ""<Mouse>/delta/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""f751b6d3-89bb-43ad-8dfe-d72f6aaa949f"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""c6b3544b-b065-4faa-b942-ef4e551edafb"",
                    ""path"": ""<Mouse>/delta/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""27eb49fc-1865-424f-909d-8e9413332f32"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""5b6021d6-bc9d-44f3-a8d0-c53c8f4b2ebd"",
                    ""path"": ""<Mouse>/delta/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""c29a961b-0132-4314-a0e9-2999653d35a5"",
                    ""path"": ""<Gamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""dd9065d2-5b75-4835-94d5-cbaeccb88cc1"",
                    ""path"": ""<Mouse>/delta/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""705eed97-5ca2-4a85-a5bb-61150032c864"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": ""Tap(duration=0.2,pressPoint=1)"",
                    ""processors"": ""AxisDeadzone(min=0.1,max=1)"",
                    ""groups"": """",
                    ""action"": ""Lock On Target Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""971363af-a19a-4bec-a46c-520ccb06aed5"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": ""Tap(duration=0.2,pressPoint=1)"",
                    ""processors"": ""AxisDeadzone(min=0.1,max=1)"",
                    ""groups"": """",
                    ""action"": ""Lock On Target Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""90aa3cad-4c1b-4d69-a179-43c4cbbfe76a"",
                    ""path"": ""<Gamepad>/rightStick/right"",
                    ""interactions"": ""Tap(duration=0.2,pressPoint=1)"",
                    ""processors"": ""AxisDeadzone(min=0.1,max=1)"",
                    ""groups"": """",
                    ""action"": ""Lock On Target Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2af769c3-f1f3-4168-a871-23cff0698053"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": ""Tap(duration=0.2,pressPoint=1)"",
                    ""processors"": ""AxisDeadzone(min=0.1,max=1)"",
                    ""groups"": """",
                    ""action"": ""Lock On Target Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e509ad15-b3fc-4ee4-9a6f-97471ff7f2f0"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Inventory MovementRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fe28e412-a720-499a-982e-ecab2b0f12c7"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Inventory MovementRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""943704e3-32d7-427a-9812-e33b89962bbb"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Inventory MovementLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""17c1e1df-27cd-4ff2-ab6e-552fef3c4526"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Inventory MovementLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b9c9a28a-2f63-4555-9e66-d875c7a003b1"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Inventory MovementUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4e50bdaa-4d00-4a42-9723-e020d7fccd7c"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Inventory MovementUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b409fb8b-1f64-4d40-9191-5c3018482ee1"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Inventory MovementDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4c44fe77-9a63-493f-b08d-2d20c7a0ae41"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Inventory MovementDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5e950fc1-75d2-4dc4-b95a-f3eaeba7086d"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate LeftMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b03871bc-25e5-4d8f-8a55-3e83f6300a04"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate RightMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Player Actions"",
            ""id"": ""ff31f2bf-e4bc-4ac9-a3f1-c8c581440826"",
            ""actions"": [
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""308dfb5a-1112-4928-8074-76d4a3fa8980"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Slide"",
                    ""type"": ""Button"",
                    ""id"": ""b4d09319-c782-4ab5-85f7-872cfde5b91b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""Button"",
                    ""id"": ""c72e4099-25f0-4c3a-a410-249cdb337db8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ResetCamera"",
                    ""type"": ""Button"",
                    ""id"": ""dc9fb52c-be3c-43e5-be64-23775dd82848"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ControlCamera"",
                    ""type"": ""Button"",
                    ""id"": ""ce46e5cc-bd04-4a4b-be9f-4c5af08c7ee2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LowAttack"",
                    ""type"": ""Button"",
                    ""id"": ""cadd1eac-532f-4b58-bd32-68327d730b58"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HighAttack"",
                    ""type"": ""Button"",
                    ""id"": ""08238fde-b1ab-4540-a058-99bcf1f0a948"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LockOn"",
                    ""type"": ""Button"",
                    ""id"": ""d17f1b38-f7bb-4351-9cdb-0bfd4782cdc2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UseMagic"",
                    ""type"": ""Button"",
                    ""id"": ""b27af35f-f1c1-4128-a258-250ad61a5e97"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""b90c9250-7d50-4d16-bc63-09d45f0e4bf0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OnPause"",
                    ""type"": ""Button"",
                    ""id"": ""e1e38dbe-8b75-412e-a33d-9d2b7eff3e05"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Option"",
                    ""type"": ""Button"",
                    ""id"": ""86b57cba-abe8-4837-9a11-5d314eadac90"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""0e7c06c8-9025-424d-b7f0-8012465bb147"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e15f5555-c140-45a7-b389-695a458869e0"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a98680fe-a34a-4ef3-853d-3bc285c7f182"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Slide"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1ab2a71c-d204-4904-a952-47229cb63ec7"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Slide"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""020d2f83-4845-4740-ac06-0df75ce3d61e"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LowAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a49c795b-9e69-4540-ab5c-5fada29d6586"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LowAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""354f4a62-0470-4b43-8ef0-b1feed1e0594"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HighAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7be19d04-7745-4e29-b40a-da2258109311"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HighAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8ad5f032-b80b-4420-8c04-f2d8ea9a565f"",
                    ""path"": ""<Gamepad>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LockOn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6cf70bd2-e49e-46af-8f09-bedf2c5b30be"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LockOn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""afc46761-3edd-418c-aadd-19bf19f67f5d"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UseMagic"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6c3dff9b-7e32-4f56-8130-c209cd754d93"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UseMagic"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5e1c4752-de50-4cea-a803-3534cd7ea990"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3718f587-5c3d-48aa-83c5-a0fb4c937b51"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""93bcadb1-3ad9-4521-9cdf-f293bfdac1cf"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OnPause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b042ff3d-27d8-447d-99a3-73f9e449c1db"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5e4daa7f-9780-4460-b1c2-b82c2be27085"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8301bd5b-4c21-4767-8dd6-ac57ead01de4"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Option"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8ba097f2-9606-4f07-a2db-2ed3cc42e5c7"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Option"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""27f7480f-a3cc-43dc-9e3e-c27d7ac85a55"",
                    ""path"": ""<Gamepad>/rightStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ResetCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""17c5d12d-4352-42e0-871c-dda2dbd65db8"",
                    ""path"": ""<Keyboard>/v"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ResetCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6a2fdf59-d727-4589-a0fe-92ccd9b0ddd2"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ControlCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""DevMode"",
            ""id"": ""24567d0c-a995-43db-a8d3-6c257b327aa7"",
            ""actions"": [
                {
                    ""name"": ""AddVases"",
                    ""type"": ""Button"",
                    ""id"": ""ab7aebf3-c721-4d4a-a140-9fa860505e86"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AddTolol"",
                    ""type"": ""Button"",
                    ""id"": ""9fe49f6a-5f68-4bf9-9f38-c8431a5422bd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MaxHealth"",
                    ""type"": ""Button"",
                    ""id"": ""bc86abff-0095-4809-8943-5d3b74dcbe55"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MaxStamina"",
                    ""type"": ""Button"",
                    ""id"": ""160b1880-b279-4a91-91f3-fba2e4c64504"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ActivateSorcery"",
                    ""type"": ""Button"",
                    ""id"": ""268e5c51-4b61-4e79-ac3a-143a0454b8ea"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ResetSorcery"",
                    ""type"": ""Button"",
                    ""id"": ""4b1073d8-45bd-45e5-af6e-1c44cf28cadd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ResetInventory"",
                    ""type"": ""Button"",
                    ""id"": ""ea061853-0470-4b8f-a461-4fc383579098"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""34733807-82d1-4211-9235-1be3a8bb760f"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AddVases"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""47edbfa4-ead9-4dda-a0ae-b2bd36d54edb"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AddTolol"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9d9875cc-c1b2-44df-ac6b-bb951b88b6a0"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MaxHealth"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1f135579-038a-41f4-95ee-3ab6cf286489"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MaxStamina"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ea3a3c00-019b-4fd6-afac-ba6fe4f3cbcb"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ActivateSorcery"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""40cfbfd8-d9e8-4cab-aadb-fa75c924b23c"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ResetSorcery"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6d06ec91-f96c-42b9-8596-ec058c776868"",
                    ""path"": ""<Keyboard>/7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ResetInventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player  Movement
        m_PlayerMovement = asset.FindActionMap("Player  Movement", throwIfNotFound: true);
        m_PlayerMovement_Movement = m_PlayerMovement.FindAction("Movement", throwIfNotFound: true);
        m_PlayerMovement_Camera = m_PlayerMovement.FindAction("Camera", throwIfNotFound: true);
        m_PlayerMovement_LockOnTargetLeft = m_PlayerMovement.FindAction("Lock On Target Left", throwIfNotFound: true);
        m_PlayerMovement_LockOnTargetRight = m_PlayerMovement.FindAction("Lock On Target Right", throwIfNotFound: true);
        m_PlayerMovement_NavigateLeftMenu = m_PlayerMovement.FindAction("Navigate LeftMenu", throwIfNotFound: true);
        m_PlayerMovement_NavigateRightMenu = m_PlayerMovement.FindAction("Navigate RightMenu", throwIfNotFound: true);
        m_PlayerMovement_InventoryMovementRight = m_PlayerMovement.FindAction("Inventory MovementRight", throwIfNotFound: true);
        m_PlayerMovement_InventoryMovementLeft = m_PlayerMovement.FindAction("Inventory MovementLeft", throwIfNotFound: true);
        m_PlayerMovement_InventoryMovementUp = m_PlayerMovement.FindAction("Inventory MovementUp", throwIfNotFound: true);
        m_PlayerMovement_InventoryMovementDown = m_PlayerMovement.FindAction("Inventory MovementDown", throwIfNotFound: true);
        // Player Actions
        m_PlayerActions = asset.FindActionMap("Player Actions", throwIfNotFound: true);
        m_PlayerActions_Jump = m_PlayerActions.FindAction("Jump", throwIfNotFound: true);
        m_PlayerActions_Slide = m_PlayerActions.FindAction("Slide", throwIfNotFound: true);
        m_PlayerActions_Sprint = m_PlayerActions.FindAction("Sprint", throwIfNotFound: true);
        m_PlayerActions_ResetCamera = m_PlayerActions.FindAction("ResetCamera", throwIfNotFound: true);
        m_PlayerActions_ControlCamera = m_PlayerActions.FindAction("ControlCamera", throwIfNotFound: true);
        m_PlayerActions_LowAttack = m_PlayerActions.FindAction("LowAttack", throwIfNotFound: true);
        m_PlayerActions_HighAttack = m_PlayerActions.FindAction("HighAttack", throwIfNotFound: true);
        m_PlayerActions_LockOn = m_PlayerActions.FindAction("LockOn", throwIfNotFound: true);
        m_PlayerActions_UseMagic = m_PlayerActions.FindAction("UseMagic", throwIfNotFound: true);
        m_PlayerActions_Interact = m_PlayerActions.FindAction("Interact", throwIfNotFound: true);
        m_PlayerActions_OnPause = m_PlayerActions.FindAction("OnPause", throwIfNotFound: true);
        m_PlayerActions_Option = m_PlayerActions.FindAction("Option", throwIfNotFound: true);
        // DevMode
        m_DevMode = asset.FindActionMap("DevMode", throwIfNotFound: true);
        m_DevMode_AddVases = m_DevMode.FindAction("AddVases", throwIfNotFound: true);
        m_DevMode_AddTolol = m_DevMode.FindAction("AddTolol", throwIfNotFound: true);
        m_DevMode_MaxHealth = m_DevMode.FindAction("MaxHealth", throwIfNotFound: true);
        m_DevMode_MaxStamina = m_DevMode.FindAction("MaxStamina", throwIfNotFound: true);
        m_DevMode_ActivateSorcery = m_DevMode.FindAction("ActivateSorcery", throwIfNotFound: true);
        m_DevMode_ResetSorcery = m_DevMode.FindAction("ResetSorcery", throwIfNotFound: true);
        m_DevMode_ResetInventory = m_DevMode.FindAction("ResetInventory", throwIfNotFound: true);
    }

    ~@PlayerControls()
    {
        UnityEngine.Debug.Assert(!m_PlayerMovement.enabled, "This will cause a leak and performance issues, PlayerControls.PlayerMovement.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_PlayerActions.enabled, "This will cause a leak and performance issues, PlayerControls.PlayerActions.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_DevMode.enabled, "This will cause a leak and performance issues, PlayerControls.DevMode.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player  Movement
    private readonly InputActionMap m_PlayerMovement;
    private List<IPlayerMovementActions> m_PlayerMovementActionsCallbackInterfaces = new List<IPlayerMovementActions>();
    private readonly InputAction m_PlayerMovement_Movement;
    private readonly InputAction m_PlayerMovement_Camera;
    private readonly InputAction m_PlayerMovement_LockOnTargetLeft;
    private readonly InputAction m_PlayerMovement_LockOnTargetRight;
    private readonly InputAction m_PlayerMovement_NavigateLeftMenu;
    private readonly InputAction m_PlayerMovement_NavigateRightMenu;
    private readonly InputAction m_PlayerMovement_InventoryMovementRight;
    private readonly InputAction m_PlayerMovement_InventoryMovementLeft;
    private readonly InputAction m_PlayerMovement_InventoryMovementUp;
    private readonly InputAction m_PlayerMovement_InventoryMovementDown;
    public struct PlayerMovementActions
    {
        private @PlayerControls m_Wrapper;
        public PlayerMovementActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_PlayerMovement_Movement;
        public InputAction @Camera => m_Wrapper.m_PlayerMovement_Camera;
        public InputAction @LockOnTargetLeft => m_Wrapper.m_PlayerMovement_LockOnTargetLeft;
        public InputAction @LockOnTargetRight => m_Wrapper.m_PlayerMovement_LockOnTargetRight;
        public InputAction @NavigateLeftMenu => m_Wrapper.m_PlayerMovement_NavigateLeftMenu;
        public InputAction @NavigateRightMenu => m_Wrapper.m_PlayerMovement_NavigateRightMenu;
        public InputAction @InventoryMovementRight => m_Wrapper.m_PlayerMovement_InventoryMovementRight;
        public InputAction @InventoryMovementLeft => m_Wrapper.m_PlayerMovement_InventoryMovementLeft;
        public InputAction @InventoryMovementUp => m_Wrapper.m_PlayerMovement_InventoryMovementUp;
        public InputAction @InventoryMovementDown => m_Wrapper.m_PlayerMovement_InventoryMovementDown;
        public InputActionMap Get() { return m_Wrapper.m_PlayerMovement; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerMovementActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerMovementActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerMovementActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerMovementActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @Camera.started += instance.OnCamera;
            @Camera.performed += instance.OnCamera;
            @Camera.canceled += instance.OnCamera;
            @LockOnTargetLeft.started += instance.OnLockOnTargetLeft;
            @LockOnTargetLeft.performed += instance.OnLockOnTargetLeft;
            @LockOnTargetLeft.canceled += instance.OnLockOnTargetLeft;
            @LockOnTargetRight.started += instance.OnLockOnTargetRight;
            @LockOnTargetRight.performed += instance.OnLockOnTargetRight;
            @LockOnTargetRight.canceled += instance.OnLockOnTargetRight;
            @NavigateLeftMenu.started += instance.OnNavigateLeftMenu;
            @NavigateLeftMenu.performed += instance.OnNavigateLeftMenu;
            @NavigateLeftMenu.canceled += instance.OnNavigateLeftMenu;
            @NavigateRightMenu.started += instance.OnNavigateRightMenu;
            @NavigateRightMenu.performed += instance.OnNavigateRightMenu;
            @NavigateRightMenu.canceled += instance.OnNavigateRightMenu;
            @InventoryMovementRight.started += instance.OnInventoryMovementRight;
            @InventoryMovementRight.performed += instance.OnInventoryMovementRight;
            @InventoryMovementRight.canceled += instance.OnInventoryMovementRight;
            @InventoryMovementLeft.started += instance.OnInventoryMovementLeft;
            @InventoryMovementLeft.performed += instance.OnInventoryMovementLeft;
            @InventoryMovementLeft.canceled += instance.OnInventoryMovementLeft;
            @InventoryMovementUp.started += instance.OnInventoryMovementUp;
            @InventoryMovementUp.performed += instance.OnInventoryMovementUp;
            @InventoryMovementUp.canceled += instance.OnInventoryMovementUp;
            @InventoryMovementDown.started += instance.OnInventoryMovementDown;
            @InventoryMovementDown.performed += instance.OnInventoryMovementDown;
            @InventoryMovementDown.canceled += instance.OnInventoryMovementDown;
        }

        private void UnregisterCallbacks(IPlayerMovementActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @Camera.started -= instance.OnCamera;
            @Camera.performed -= instance.OnCamera;
            @Camera.canceled -= instance.OnCamera;
            @LockOnTargetLeft.started -= instance.OnLockOnTargetLeft;
            @LockOnTargetLeft.performed -= instance.OnLockOnTargetLeft;
            @LockOnTargetLeft.canceled -= instance.OnLockOnTargetLeft;
            @LockOnTargetRight.started -= instance.OnLockOnTargetRight;
            @LockOnTargetRight.performed -= instance.OnLockOnTargetRight;
            @LockOnTargetRight.canceled -= instance.OnLockOnTargetRight;
            @NavigateLeftMenu.started -= instance.OnNavigateLeftMenu;
            @NavigateLeftMenu.performed -= instance.OnNavigateLeftMenu;
            @NavigateLeftMenu.canceled -= instance.OnNavigateLeftMenu;
            @NavigateRightMenu.started -= instance.OnNavigateRightMenu;
            @NavigateRightMenu.performed -= instance.OnNavigateRightMenu;
            @NavigateRightMenu.canceled -= instance.OnNavigateRightMenu;
            @InventoryMovementRight.started -= instance.OnInventoryMovementRight;
            @InventoryMovementRight.performed -= instance.OnInventoryMovementRight;
            @InventoryMovementRight.canceled -= instance.OnInventoryMovementRight;
            @InventoryMovementLeft.started -= instance.OnInventoryMovementLeft;
            @InventoryMovementLeft.performed -= instance.OnInventoryMovementLeft;
            @InventoryMovementLeft.canceled -= instance.OnInventoryMovementLeft;
            @InventoryMovementUp.started -= instance.OnInventoryMovementUp;
            @InventoryMovementUp.performed -= instance.OnInventoryMovementUp;
            @InventoryMovementUp.canceled -= instance.OnInventoryMovementUp;
            @InventoryMovementDown.started -= instance.OnInventoryMovementDown;
            @InventoryMovementDown.performed -= instance.OnInventoryMovementDown;
            @InventoryMovementDown.canceled -= instance.OnInventoryMovementDown;
        }

        public void RemoveCallbacks(IPlayerMovementActions instance)
        {
            if (m_Wrapper.m_PlayerMovementActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerMovementActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerMovementActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerMovementActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerMovementActions @PlayerMovement => new PlayerMovementActions(this);

    // Player Actions
    private readonly InputActionMap m_PlayerActions;
    private List<IPlayerActionsActions> m_PlayerActionsActionsCallbackInterfaces = new List<IPlayerActionsActions>();
    private readonly InputAction m_PlayerActions_Jump;
    private readonly InputAction m_PlayerActions_Slide;
    private readonly InputAction m_PlayerActions_Sprint;
    private readonly InputAction m_PlayerActions_ResetCamera;
    private readonly InputAction m_PlayerActions_ControlCamera;
    private readonly InputAction m_PlayerActions_LowAttack;
    private readonly InputAction m_PlayerActions_HighAttack;
    private readonly InputAction m_PlayerActions_LockOn;
    private readonly InputAction m_PlayerActions_UseMagic;
    private readonly InputAction m_PlayerActions_Interact;
    private readonly InputAction m_PlayerActions_OnPause;
    private readonly InputAction m_PlayerActions_Option;
    public struct PlayerActionsActions
    {
        private @PlayerControls m_Wrapper;
        public PlayerActionsActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Jump => m_Wrapper.m_PlayerActions_Jump;
        public InputAction @Slide => m_Wrapper.m_PlayerActions_Slide;
        public InputAction @Sprint => m_Wrapper.m_PlayerActions_Sprint;
        public InputAction @ResetCamera => m_Wrapper.m_PlayerActions_ResetCamera;
        public InputAction @ControlCamera => m_Wrapper.m_PlayerActions_ControlCamera;
        public InputAction @LowAttack => m_Wrapper.m_PlayerActions_LowAttack;
        public InputAction @HighAttack => m_Wrapper.m_PlayerActions_HighAttack;
        public InputAction @LockOn => m_Wrapper.m_PlayerActions_LockOn;
        public InputAction @UseMagic => m_Wrapper.m_PlayerActions_UseMagic;
        public InputAction @Interact => m_Wrapper.m_PlayerActions_Interact;
        public InputAction @OnPause => m_Wrapper.m_PlayerActions_OnPause;
        public InputAction @Option => m_Wrapper.m_PlayerActions_Option;
        public InputActionMap Get() { return m_Wrapper.m_PlayerActions; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActionsActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActionsActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsActionsCallbackInterfaces.Add(instance);
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @Slide.started += instance.OnSlide;
            @Slide.performed += instance.OnSlide;
            @Slide.canceled += instance.OnSlide;
            @Sprint.started += instance.OnSprint;
            @Sprint.performed += instance.OnSprint;
            @Sprint.canceled += instance.OnSprint;
            @ResetCamera.started += instance.OnResetCamera;
            @ResetCamera.performed += instance.OnResetCamera;
            @ResetCamera.canceled += instance.OnResetCamera;
            @ControlCamera.started += instance.OnControlCamera;
            @ControlCamera.performed += instance.OnControlCamera;
            @ControlCamera.canceled += instance.OnControlCamera;
            @LowAttack.started += instance.OnLowAttack;
            @LowAttack.performed += instance.OnLowAttack;
            @LowAttack.canceled += instance.OnLowAttack;
            @HighAttack.started += instance.OnHighAttack;
            @HighAttack.performed += instance.OnHighAttack;
            @HighAttack.canceled += instance.OnHighAttack;
            @LockOn.started += instance.OnLockOn;
            @LockOn.performed += instance.OnLockOn;
            @LockOn.canceled += instance.OnLockOn;
            @UseMagic.started += instance.OnUseMagic;
            @UseMagic.performed += instance.OnUseMagic;
            @UseMagic.canceled += instance.OnUseMagic;
            @Interact.started += instance.OnInteract;
            @Interact.performed += instance.OnInteract;
            @Interact.canceled += instance.OnInteract;
            @OnPause.started += instance.OnOnPause;
            @OnPause.performed += instance.OnOnPause;
            @OnPause.canceled += instance.OnOnPause;
            @Option.started += instance.OnOption;
            @Option.performed += instance.OnOption;
            @Option.canceled += instance.OnOption;
        }

        private void UnregisterCallbacks(IPlayerActionsActions instance)
        {
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @Slide.started -= instance.OnSlide;
            @Slide.performed -= instance.OnSlide;
            @Slide.canceled -= instance.OnSlide;
            @Sprint.started -= instance.OnSprint;
            @Sprint.performed -= instance.OnSprint;
            @Sprint.canceled -= instance.OnSprint;
            @ResetCamera.started -= instance.OnResetCamera;
            @ResetCamera.performed -= instance.OnResetCamera;
            @ResetCamera.canceled -= instance.OnResetCamera;
            @ControlCamera.started -= instance.OnControlCamera;
            @ControlCamera.performed -= instance.OnControlCamera;
            @ControlCamera.canceled -= instance.OnControlCamera;
            @LowAttack.started -= instance.OnLowAttack;
            @LowAttack.performed -= instance.OnLowAttack;
            @LowAttack.canceled -= instance.OnLowAttack;
            @HighAttack.started -= instance.OnHighAttack;
            @HighAttack.performed -= instance.OnHighAttack;
            @HighAttack.canceled -= instance.OnHighAttack;
            @LockOn.started -= instance.OnLockOn;
            @LockOn.performed -= instance.OnLockOn;
            @LockOn.canceled -= instance.OnLockOn;
            @UseMagic.started -= instance.OnUseMagic;
            @UseMagic.performed -= instance.OnUseMagic;
            @UseMagic.canceled -= instance.OnUseMagic;
            @Interact.started -= instance.OnInteract;
            @Interact.performed -= instance.OnInteract;
            @Interact.canceled -= instance.OnInteract;
            @OnPause.started -= instance.OnOnPause;
            @OnPause.performed -= instance.OnOnPause;
            @OnPause.canceled -= instance.OnOnPause;
            @Option.started -= instance.OnOption;
            @Option.performed -= instance.OnOption;
            @Option.canceled -= instance.OnOption;
        }

        public void RemoveCallbacks(IPlayerActionsActions instance)
        {
            if (m_Wrapper.m_PlayerActionsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActionsActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActionsActions @PlayerActions => new PlayerActionsActions(this);

    // DevMode
    private readonly InputActionMap m_DevMode;
    private List<IDevModeActions> m_DevModeActionsCallbackInterfaces = new List<IDevModeActions>();
    private readonly InputAction m_DevMode_AddVases;
    private readonly InputAction m_DevMode_AddTolol;
    private readonly InputAction m_DevMode_MaxHealth;
    private readonly InputAction m_DevMode_MaxStamina;
    private readonly InputAction m_DevMode_ActivateSorcery;
    private readonly InputAction m_DevMode_ResetSorcery;
    private readonly InputAction m_DevMode_ResetInventory;
    public struct DevModeActions
    {
        private @PlayerControls m_Wrapper;
        public DevModeActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @AddVases => m_Wrapper.m_DevMode_AddVases;
        public InputAction @AddTolol => m_Wrapper.m_DevMode_AddTolol;
        public InputAction @MaxHealth => m_Wrapper.m_DevMode_MaxHealth;
        public InputAction @MaxStamina => m_Wrapper.m_DevMode_MaxStamina;
        public InputAction @ActivateSorcery => m_Wrapper.m_DevMode_ActivateSorcery;
        public InputAction @ResetSorcery => m_Wrapper.m_DevMode_ResetSorcery;
        public InputAction @ResetInventory => m_Wrapper.m_DevMode_ResetInventory;
        public InputActionMap Get() { return m_Wrapper.m_DevMode; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DevModeActions set) { return set.Get(); }
        public void AddCallbacks(IDevModeActions instance)
        {
            if (instance == null || m_Wrapper.m_DevModeActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_DevModeActionsCallbackInterfaces.Add(instance);
            @AddVases.started += instance.OnAddVases;
            @AddVases.performed += instance.OnAddVases;
            @AddVases.canceled += instance.OnAddVases;
            @AddTolol.started += instance.OnAddTolol;
            @AddTolol.performed += instance.OnAddTolol;
            @AddTolol.canceled += instance.OnAddTolol;
            @MaxHealth.started += instance.OnMaxHealth;
            @MaxHealth.performed += instance.OnMaxHealth;
            @MaxHealth.canceled += instance.OnMaxHealth;
            @MaxStamina.started += instance.OnMaxStamina;
            @MaxStamina.performed += instance.OnMaxStamina;
            @MaxStamina.canceled += instance.OnMaxStamina;
            @ActivateSorcery.started += instance.OnActivateSorcery;
            @ActivateSorcery.performed += instance.OnActivateSorcery;
            @ActivateSorcery.canceled += instance.OnActivateSorcery;
            @ResetSorcery.started += instance.OnResetSorcery;
            @ResetSorcery.performed += instance.OnResetSorcery;
            @ResetSorcery.canceled += instance.OnResetSorcery;
            @ResetInventory.started += instance.OnResetInventory;
            @ResetInventory.performed += instance.OnResetInventory;
            @ResetInventory.canceled += instance.OnResetInventory;
        }

        private void UnregisterCallbacks(IDevModeActions instance)
        {
            @AddVases.started -= instance.OnAddVases;
            @AddVases.performed -= instance.OnAddVases;
            @AddVases.canceled -= instance.OnAddVases;
            @AddTolol.started -= instance.OnAddTolol;
            @AddTolol.performed -= instance.OnAddTolol;
            @AddTolol.canceled -= instance.OnAddTolol;
            @MaxHealth.started -= instance.OnMaxHealth;
            @MaxHealth.performed -= instance.OnMaxHealth;
            @MaxHealth.canceled -= instance.OnMaxHealth;
            @MaxStamina.started -= instance.OnMaxStamina;
            @MaxStamina.performed -= instance.OnMaxStamina;
            @MaxStamina.canceled -= instance.OnMaxStamina;
            @ActivateSorcery.started -= instance.OnActivateSorcery;
            @ActivateSorcery.performed -= instance.OnActivateSorcery;
            @ActivateSorcery.canceled -= instance.OnActivateSorcery;
            @ResetSorcery.started -= instance.OnResetSorcery;
            @ResetSorcery.performed -= instance.OnResetSorcery;
            @ResetSorcery.canceled -= instance.OnResetSorcery;
            @ResetInventory.started -= instance.OnResetInventory;
            @ResetInventory.performed -= instance.OnResetInventory;
            @ResetInventory.canceled -= instance.OnResetInventory;
        }

        public void RemoveCallbacks(IDevModeActions instance)
        {
            if (m_Wrapper.m_DevModeActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IDevModeActions instance)
        {
            foreach (var item in m_Wrapper.m_DevModeActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_DevModeActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public DevModeActions @DevMode => new DevModeActions(this);
    public interface IPlayerMovementActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnCamera(InputAction.CallbackContext context);
        void OnLockOnTargetLeft(InputAction.CallbackContext context);
        void OnLockOnTargetRight(InputAction.CallbackContext context);
        void OnNavigateLeftMenu(InputAction.CallbackContext context);
        void OnNavigateRightMenu(InputAction.CallbackContext context);
        void OnInventoryMovementRight(InputAction.CallbackContext context);
        void OnInventoryMovementLeft(InputAction.CallbackContext context);
        void OnInventoryMovementUp(InputAction.CallbackContext context);
        void OnInventoryMovementDown(InputAction.CallbackContext context);
    }
    public interface IPlayerActionsActions
    {
        void OnJump(InputAction.CallbackContext context);
        void OnSlide(InputAction.CallbackContext context);
        void OnSprint(InputAction.CallbackContext context);
        void OnResetCamera(InputAction.CallbackContext context);
        void OnControlCamera(InputAction.CallbackContext context);
        void OnLowAttack(InputAction.CallbackContext context);
        void OnHighAttack(InputAction.CallbackContext context);
        void OnLockOn(InputAction.CallbackContext context);
        void OnUseMagic(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnOnPause(InputAction.CallbackContext context);
        void OnOption(InputAction.CallbackContext context);
    }
    public interface IDevModeActions
    {
        void OnAddVases(InputAction.CallbackContext context);
        void OnAddTolol(InputAction.CallbackContext context);
        void OnMaxHealth(InputAction.CallbackContext context);
        void OnMaxStamina(InputAction.CallbackContext context);
        void OnActivateSorcery(InputAction.CallbackContext context);
        void OnResetSorcery(InputAction.CallbackContext context);
        void OnResetInventory(InputAction.CallbackContext context);
    }
}
